// Opacity on load, same than Apple.com
.opacity-on-load,
.opacity-on-load-instant {
  transition: opacity $transition-duration ease-in-out;
  opacity: 0;
  visibility: hidden;

  &.fade-in {
    opacity: 1;
    visibility: visible;
  }
}

@keyframes underline-idle {
  0% {
    width: 0%;
    opacity: .7;
  }

  50% {
    width: 100%;
    opacity: 1;
  }

  100% {
    width: 0;
    opacity: .7;
  }
}

@keyframes opacity-in {
  0% {
    opacity: .4;
  }

  100% {
    opacity: 1;
  }
}

@keyframes opacity-out {
  0% {
    opacity: 1;
  }

  100% {
    opacity: .4;
  }
}

@keyframes pulse-opacity {
  0% {
    opacity: .4;
  }

  50% {
    opacity: 1;
  }

  100% {
    opacity: .4;
  }
}

@keyframes stay-low-opacity {
  0% {
    opacity: .4;
  }

  100% {
    opacity: .4;
  }
}

@keyframes pulse-width {
  0% {
    width: 6rem;
  }

  50% {
    width: 12rem;
  }

  100% {
    width: 6rem;
  }
}

@keyframes stay-narrow-width {
  0% {
    width: 6rem;
  }

  100% {
    width: 6rem;
  }
}

@keyframes fade-in-down {
  from {
    opacity: 0;
    transform: translate3d(0, -50%, 0);
  }

  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}

@keyframes rotate {
  0% {
    transform: rotate(0deg);
  }

  50% {
    transform: rotate(-90deg);
  }

  100% {
    transform: rotate(-90deg);
  }
}

// Glitch
$color-glitch-primary: $color-midnight-blue;
$color-glitch-secondary: $color-white;
$glitch-steps: 20;

.has-glitch {
  position: relative;
  margin: 0 auto;
  color: $color-glitch-primary;
  transform: scale3d(1, 1, 1);

  &::before,
  &::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    overflow: hidden;
    background: $color-glitch-secondary;
    color: $color-glitch-primary;
    clip: rect(0, 900px, 0, 0);
  }

  &::before {
    left: 7px;
    text-shadow: 1px 0 $color-white;
    animation: glitch-effect 3s infinite linear alternate-reverse;
  }

  &::after {
    left: 3px;
    text-shadow: -1px 0 $color-mint;
    animation: glitch-effect 2s infinite linear alternate-reverse;
  }
}

@keyframes glitch-effect {
  @for $i from 0 through $glitch-steps {
    #{percentage($i*(1/$glitch-steps))} {
      clip: rect(random(100)+px, 9999px, random(100)+px, 0);
    }
  }
}
